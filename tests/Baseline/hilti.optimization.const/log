### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[debug/optimizer] [const.hlt:17:14-17:14] expression::Name "f" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [const.hlt:25:5-25:5] expression::Name "f" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [const.hlt:35:5-35:5] expression::Name "f" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [const.hlt:53:14-53:14] expression::Name "f" -> expression::Ctor "False" (inlining constant)
[debug/optimizer] [const.hlt:16:14-16:14] expression::Name "t" -> expression::Ctor "True" (inlining constant)
[debug/optimizer] [const.hlt:19:5-19:5] expression::Name "t" -> expression::Ctor "True" (inlining constant)
[debug/optimizer] [const.hlt:31:5-31:5] expression::Name "t" -> expression::Ctor "True" (inlining constant)
[debug/optimizer] [const.hlt:52:14-52:14] expression::Name "t" -> expression::Ctor "True" (inlining constant)
[debug/optimizer] [const.hlt:53:14-53:21] expression::Ternary "False ? 0 : 1" -> expression::Ctor "1"
[debug/optimizer] [const.hlt:52:14-52:21] expression::Ternary "True ? 1 : 0" -> expression::Ctor "1"
[debug/optimizer] [const.hlt:25:1-29:1] statement::If "if ( False ) { hilti::print(2, True); } else { hilti::print(3, True); }" -> statement::Block "{ hilti::print(3, True); }"
[debug/optimizer] [const.hlt:35:1-37:1] statement::If "if ( False ) { hilti::print(5, True); }" -> null
[debug/optimizer] [const.hlt:19:1-23:1] statement::If "if ( True ) { hilti::print(0, True); } else { hilti::print(1, True); }" -> statement::If "if ( True ) { hilti::print(0, True); }"
[debug/optimizer] [const.hlt:10:1-72:1] statement::If "if ( True ) { hilti::print(0, True); }" -> statement::Block "{ hilti::print(0, True); }"
[debug/optimizer] [const.hlt:31:1-33:1] statement::If "if ( True ) { hilti::print(4, True); }" -> statement::Block "{ hilti::print(4, True); }"
[debug/optimizer] [const.hlt:58:1-62:1] statement::While "while ( False ) { hilti::print(False, True); } else { hilti::print(True, True); }" -> statement::Block "{ hilti::print(True, True); }" (replacing while loop with its else block)
[debug/optimizer] [const.hlt:56:1-56:38] statement::While "while ( False ) { hilti::print(False, True); }" -> removing while loop with false condition
[debug/optimizer] [const.hlt:66:1-70:1] statement::While "while ( True ) { hilti::print(True, True); } else { hilti::print(False, True); }" -> removing else block of while loop with true condition
