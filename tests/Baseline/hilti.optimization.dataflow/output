### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
# Module x
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [] out: [] }"];
	2 [label="fn();" xlabel="use: [fn] reach: { in: [] out: [] } keep"];
	0 -> 2 [label="0"];
	2 -> 1 [label="1"];
}
# Function fn
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [a = b + 1;, b = a;, local uint<64> c = a;] out: [a = b + 1;, b = a;, local uint<64> c = a;] }"];
	2 [label="return a + b;" xlabel="use: [a, b] reach: { in: [a = b + 1;, b = a;, local uint<64> c = a;] out: [a = b + 1;, b = a;, local uint<64> c = a;] } keep"];
	3 [label="a = b + 1;" xlabel="use: [a, b] gen: [a: a = b + 1;] kill: [a: [a = 1;, local uint<64> a = 0;]] reach: { in: [a = 1;, b = a;] out: [a = b + 1;, b = a;] }"];
	4 [label="a = 1;" xlabel="use: [a] gen: [a: a = 1;] kill: [a: [a = b + 1;, local uint<64> a = 0;]] reach: { in: [local uint<64> a = 0;] out: [a = 1;] }"];
	5 [label="b = a;" xlabel="use: [a, b] gen: [b: b = a;] kill: [b: [local uint<64> b = 1;]] reach: { in: [a = 1;, local uint<64> b = 1;] out: [a = 1;, b = a;] }"];
	6 [label="local uint<64> b = 1;" xlabel="gen: [b: local uint<64> b = 1;] kill: [b: [b = a;]] reach: { in: [a = 1;] out: [a = 1;, local uint<64> b = 1;] }"];
	7 [label="local uint<64> a = 0;" xlabel="gen: [a: local uint<64> a = 0;] kill: [a: [a = 1;, a = b + 1;]] reach: { in: [] out: [local uint<64> a = 0;] }"];
	0 -> 7 [label="0"];
	7 -> 4 [label="1"];
	4 -> 6 [label="2"];
	6 -> 5 [label="3"];
	5 -> 3 [label="4"];
	2 -> 1 [label="7"];
	3 -> 2 [label="8"];
}
# Module hilti
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [] out: [] }"];
	0 -> 1 [label="0"];
}
# Module x
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [] out: [] }"];
	2 [label="fn();" xlabel="use: [fn] reach: { in: [] out: [] } keep"];
	0 -> 2 [label="0"];
	2 -> 1 [label="1"];
}
# Function fn
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [a = b + 1;, b = a;] out: [a = b + 1;, b = a;] }"];
	2 [label="return a + b;" xlabel="use: [a, b] reach: { in: [a = b + 1;, b = a;] out: [a = b + 1;, b = a;] } keep"];
	3 [label="a = b + 1;" xlabel="use: [a, b] gen: [a: a = b + 1;] kill: [a: [a = 1;, local uint<64> a = 0;]] reach: { in: [a = 1;, b = a;] out: [a = b + 1;, b = a;] }"];
	4 [label="a = 1;" xlabel="use: [a] gen: [a: a = 1;] kill: [a: [a = b + 1;, local uint<64> a = 0;]] reach: { in: [local uint<64> a = 0;] out: [a = 1;] }"];
	5 [label="b = a;" xlabel="use: [a, b] gen: [b: b = a;] kill: [b: [local uint<64> b = 1;]] reach: { in: [a = 1;, local uint<64> b = 1;] out: [a = 1;, b = a;] }"];
	6 [label="local uint<64> b = 1;" xlabel="gen: [b: local uint<64> b = 1;] kill: [b: [b = a;]] reach: { in: [a = 1;] out: [a = 1;, local uint<64> b = 1;] }"];
	7 [label="local uint<64> a = 0;" xlabel="gen: [a: local uint<64> a = 0;] kill: [a: [a = 1;, a = b + 1;]] reach: { in: [] out: [local uint<64> a = 0;] }"];
	0 -> 7 [label="0"];
	7 -> 4 [label="1"];
	4 -> 6 [label="2"];
	6 -> 5 [label="3"];
	5 -> 3 [label="4"];
	3 -> 2 [label="5"];
	2 -> 1 [label="6"];
}
# Module hilti
digraph {
	0 [label=start shape=Mdiamond xlabel="reach: { in: [] out: [] }"];
	1 [label=end shape=Msquare xlabel="reach: { in: [] out: [] }"];
	0 -> 1 [label="0"];
}
