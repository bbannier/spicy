# @TEST-EXEC: hiltic %INPUT -p -o noopt.hlt -g
# @TEST-EXEC: btest-diff noopt.hlt
#
# @TEST-EXEC: hiltic %INPUT -p -o opt.hlt -D optimizer 2>&1 | sort -k 3 > log
# @TEST-EXEC: btest-diff opt.hlt
# @TEST-EXEC: btest-diff log
#
# @TEST-DOC: Tests optimizations performing constant folding.

module Foo {
import hilti;

const t = True;
const f = False;

hilti::print(t);
hilti::print(f);

if (t) {
    hilti::print(0);
} else {
    hilti::print(1);
}

if (f) {
    hilti::print(2);
} else {
    hilti::print(3);
}

if (t) {
    hilti::print(4);
}

if (f) {
    hilti::print(5);
}

hilti::print(t || t);
hilti::print(t || f);
hilti::print(f || t);
hilti::print(f || f);

hilti::print(t && t);
hilti::print(t && f);
hilti::print(f && t);
hilti::print(f && f);

hilti::print(! t);
hilti::print(! f);

hilti::print(t ? 1: 0);
hilti::print(f ? 0: 1);

# While loops over constants.
while (False) { hilti::print(False); }

while (False) {
    hilti::print(False);
} else {
    hilti::print(True);
}

while (True) { hilti::print(True); }

while (True) {
    hilti::print(True);
} else {
    hilti::print(False);
}

}
